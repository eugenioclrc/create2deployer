// Optimized Create2Deployer Contract in Huff
// This implementation allows for efficient contract deployment using the CREATE2 opcode.
// The main advantage of this Huff version is the significant reduction in bytecode size and gas consumption.
// Developed during the hackathon KOD.

#define macro __DISPATCHER(z0) = takes(0) returns(0) {
  0x20                            // 0x20
  dup1 calldatasize sub           // 0x20, (bytecode size = calldatasize - 0x20)
  
  dup1                            // 0x20, bytecode_size, bytecode_size
  dup3                            // 0x20, bytecode_size, bytecode_size, 0x20
  <z0>                            // 0x20, bytecode_size, bytecode_size, 0x20, 0x00
  calldatacopy                    // 0x20, bytecode_size,

  <z0> calldataload               // 0x20, bytecode_size, bytes32
  dup2                            // 0x20, bytecode_size, bytes32, bytecode_size
  <z0>                            // 0x20, bytecode_size, bytes32, bytecode_size, 0x00
  callvalue                       // 0x20, bytecode_size, bytes32, bytecode_size, 0x00, callvalue
  create2                         // 0x20, bytecode_size, deployed address
  
  // if deployedAddress != 0x00: goto creationOkJump
  dup1 creationOkJump jumpi       // 0xff...e0 + calldatasize, 0x00, hash, deployedAddress
  
  // 0x00 0x00 revert (if deployedAddress == 0x00 revert)
  dup1 revert
  
  creationOkJump:
    <z0> mstore
    0x14 0x0c return
}

#define macro MAIN() = takes(0) returns(0) {
  __DISPATCHER(returndatasize)
}